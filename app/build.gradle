apply plugin: 'com.android.application'// 引入 android gradle 插件
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.sensorsdata.android'
apply plugin: 'myplugin'

//多渠道打包
apply plugin: 'walle'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {// 版本，applicationId 等配置
        applicationId "com.medi.androidxdevelop"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "listener", "leakcanary.FailTestOnLeakRunListener"
    }

    signingConfigs {
        release {
            storeFile file('keystore.jks')
            storePassword '123456'
            keyAlias = 'ext'
            keyPassword '123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
        rdebug {
            storeFile file('keystore.jks')
            storePassword '123456'
            keyAlias = 'ext'
            keyPassword '123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        rdebug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.rdebug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    splits {
        density{
            enable true
            exclude "ldpi","xxhdpi"
            // Specifies a list of compatible screen size settings for the manifest.
            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
    }

    walle {
        // 指定渠道包的输出路径
        apkOutputFolder = new File("${project.buildDir}/outputs/channels")
        // 定制渠道包的APK的文件名称
        apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'
        // 渠道配置文件
        channelFile = new File("${project.getProjectDir()}/channel")
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    viewBinding{
        enabled = true
    }

    dataBinding{
        enabled = true
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    //这里我们使用协程扩展库, kotlin标准库的协程太过于简陋不适用于开发者使用
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2"

    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    //网络请求部分
    implementation "com.squareup.okhttp3:okhttp:4.2.2"
    implementation "com.squareup.retrofit2:retrofit:2.6.3"
    implementation "com.squareup.okhttp3:logging-interceptor:4.2.2"
    implementation "com.squareup.retrofit2:converter-gson:2.6.3"

    // Anko 是一个让 Android 应用程序开发更快速更容易的库
    // Anko Commons
    api "org.jetbrains.anko:anko-commons:0.10.8"
    // Anko Layouts
    api "org.jetbrains.anko:anko-sdk25:0.10.8"
    // sdk15, sdk19, sdk21, sdk23 are also available
    api "org.jetbrains.anko:anko-sdk25-listeners:0.10.8"


    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation project(path: ':track')
    implementation project(':asmsdk')

    //检测内存泄露
    debugImplementation rootProject.ext.deps["canary-debug"]
    androidTestImplementation rootProject.ext.deps["canary-test"]
    //implementation 'com.squareup.leakcanary:leakcanary-object-watcher-android:2.5'

    //卡顿监听
    debugCompile 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseCompile 'com.github.markzhai:blockcanary-no-op:1.5.0'

    //多渠道打包
    implementation 'com.meituan.android.walle:library:1.1.6'

    //work
    def work_version = "2.4.0"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"
    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    //测试
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.android.support:multidex:1.0.3'
}
