ext {

    android = [
            applicationId         : "com.mediwelcome.hospital",
            compileSdkVersion     : 29,
            minSdkVersion         : 21,
            targetSdkVersion      : 28,
            versionCode           : 20400,
            versionName           : "2.4.0",
            multiDexEnabled       : true,
            appSourceCompatibility: 1.8,
            appTargetCompatibility: 1.8
    ]

    singConfigs = [
            stroeFile    : '../app/mediwelcome_key.jks',
            storePassword: '123456',
            keyAlias     : '麦迪卫康',
            keyPassword  : '123456'
    ]

    versions = [
            glideSdkVersion           : "4.11.0",
            canarySdkVersion          : "2.6",
            lifecycleVersion          : '2.1.0',
            retrofitVersion           : '2.6.3',
            okhttpVersion             : '4.2.2',
            imVersion                 : '7.4.0',
            doraemonkit               : '3.1.5',
            lifecycle_version         : '2.2.0',
            kotlin_version            : '1.4.10',
            kotlinx_coroutines_version: '1.3.3',
            work_version              : '2.4.0'
    ]

    deps = [
            kotlin_stdlib_jdk7        : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin_version}",
            appcompat                 : 'androidx.appcompat:appcompat:1.2.0',
            core_ktx                  : 'androidx.core:core-ktx:1.3.2',
            constraintlayout          : 'androidx.constraintlayout:constraintlayout:2.0.4',

            //这里我们使用协程扩展库, kotlin标准库的协程太过于简陋不适用于开发者使用
            kotlinx_coroutines_core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2",
            kotlinx_coroutines_android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2",

            lifecycle_extensions      : "androidx.lifecycle:lifecycle-extensions:2.2.0",
            lifecycle_livedata_ktx    : "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle_version}",
            lifecycle_viewmodel_ktx   : "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle_version}",
            lifecycle_runtime_ktx     : "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle_version}",

            // Anko 是一个让 Android 应用程序开发更快速更容易的库
            // Anko Commons
            anko_commons              : "org.jetbrains.anko:anko-commons:0.10.8",
            // Anko Layouts
            anko_sdk25                : "org.jetbrains.anko:anko-sdk25:0.10.8",
            // sdk15, sdk19, sdk21, sdk23 are also available
            anko_sdk25_listeners      : "org.jetbrains.anko:anko-sdk25-listeners:0.10.8",

            material                  : 'com.google.android.material:material:1.2.1',
            annotation                : 'androidx.annotation:annotation:1.1.0',

    ]

    network = [
            retrofit          : "com.squareup.retrofit2:retrofit:${versions.retrofitVersion}",
            adapter_rxjava    : "com.squareup.retrofit2:adapter-rxjava:${versions.retrofitVersion}",
            converterGson     : "com.squareup.retrofit2:converter-gson:${versions.retrofitVersion}",
            okhttp            : "com.squareup.okhttp3:okhttp:${versions.okhttpVersion}",
            loggingInterceptor: "com.squareup.okhttp3:logging-interceptor:${versions.okhttpVersion}"
    ]

    debugImplementationDependencies = [
            //内存泄露
            canary_debug       : "com.squareup.leakcanary:leakcanary-android:${versions.canarySdkVersion}",
            canary_test        : "com.squareup.leakcanary:leakcanary-android-instrumentation:${versions.canarySdkVersion}",
            //implementation 'com.squareup.leakcanary:leakcanary-object-watcher-android:2.5'
            blockcanary_android: 'com.github.markzhai:blockcanary-android:1.5.0',
            blockcanary_no_op  : 'com.github.markzhai:blockcanary-no-op:1.5.0',
    ]

    test = [
            junit        : "junit:junit:4.13.1",
            xjunit       : "androidx.test.ext:junit:1.1.2",
            espresso_core: "androidx.test.espresso:espresso-core:3.3.0"
    ]

    walle = [
            walle: 'com.meituan.android.walle:library:1.1.6'
    ]

    work = [
            // Kotlin + coroutines
            work_runtime_ktx: "androidx.work:work-runtime-ktx:${versions.work_version}",
            // optional - RxJava2 support
            work_rxjava2      : "androidx.work:work-rxjava2:${versions.work_version}",
            // optional - GCMNetworkManager support
            work_gcm          : "androidx.work:work-gcm:${versions.work_version}",
            // optional - Test helpers
            work_testing      : "androidx.work:work-testing:${versions.work_version}"
    ]

}
