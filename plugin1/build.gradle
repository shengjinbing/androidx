apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.medi.plugin1"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

android.applicationVariants.all { variant ->
    // Copy Release artifact to HostApp's assets and rename
    println("variant.name=="+variant.name)
    if (variant.name == "debug") {
        variant.outputs.each { output ->
            File originFile = output.outputFile
            println originFile.absolutePath
            copy {
                from originFile
                into "$rootDir/hostapp/src/main/assets"
                rename(originFile.name, "plugin1.apk")
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //插件瘦身的时候可以把mypluginlibrary打成jar使用provided打包的时候不打进apk中；
    //因为provided不支持module
    implementation project(path: ':mypluginlibrary')
}
